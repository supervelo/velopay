name: Handler

on:
  push:
    branches: [develop]
    paths:
      - "handler/**"
      - ".github/**"
      - "server.Dockerfile"
  workflow_dispatch:

env:
  CODENAME: movechess
  CLUSTER: movechess
  CURRENT_SERVICE: velopay
  SERVICE_TYPE: backend
  NAMESPACE: staging
  AWS_USER_ID: 649145334474
  AWS_REGION: ap-south-1
  TAG: ${{ github.run_id }}

jobs:
  install-build-and-push-job-to-k8s:
    name: Velopay Staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        working-directory: ./handler
        with:
          version: 8
          run_install: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ECR
        run: |-
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_USER_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

      - name: Login to K8S
        run: |
          aws eks --region ${AWS_REGION} update-kubeconfig --name ${CLUSTER}
          kubectl config use-context arn:aws:eks:${AWS_REGION}:${AWS_USER_ID}:cluster/${CLUSTER}

      - name: Inspect tool
        run: |-
          node --version
          pnpm --version
          aws --version
          docker --version
          kubectl version

      - name: Build and push Job Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          file: server.Dockerfile
          push: true
          tags: ${{ env.AWS_USER_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.CODENAME }}/${{ env.NAMESPACE }}/${{ env.CURRENT_SERVICE }}:latest,${{ env.AWS_USER_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.CODENAME }}/${{ env.NAMESPACE }}/${{ env.CURRENT_SERVICE }}:${{ env.TAG }}
          cache-from: type=registry,ref=${{ env.AWS_USER_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.CODENAME }}/${{ env.NAMESPACE }}/${{ env.CURRENT_SERVICE }}:latest
          cache-to: type=inline

      - name: Render Deployment YAML
        uses: nowactions/envsubst@v1
        with:
          input: ./handler/deployment.yml
          output: ./handler/gen.deployment.yml

      - name: Apply to K8S
        run: |-
          kubectl apply -f ./handler/gen.deployment.yml
          kubectl rollout status deployment/${CURRENT_SERVICE} -n staging
          kubectl get services -o wide
